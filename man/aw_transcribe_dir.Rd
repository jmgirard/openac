% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_whisper.R
\name{aw_transcribe_dir}
\alias{aw_transcribe_dir}
\title{Transcribe multiple media files with Whisper}
\usage{
aw_transcribe_dir(
  indir,
  inext,
  wavdir = NULL,
  rdsdir = NULL,
  csvdir = NULL,
  recursive = FALSE,
  progress = c("auto", "on", "off"),
  ...
)
}
\arguments{
\item{indir}{(character) What directory contains the input files?}

\item{inext}{(character) What file extension should be looked for in \code{indir}
(e.g., "mp4" or "mp3")?}

\item{wavdir}{(character, default=NULL) What directory should the prepared
WAV files be saved to? If \code{NULL}, temporary WAV files will be created and
later discarded.}

\item{rdsdir}{(character, default=NULL) What directory should the RDS output
files be saved to? If \code{NULL}, RDS files will not be output.}

\item{csvdir}{(character, default=NULL) What directory should the CSV output
files be saved to? If \code{NULL}, CSV files will not be output.}

\item{recursive}{(logical, default=FALSE) Should files in subdirectories
within \code{indir} be included?}

\item{progress}{(string, default = "auto") Controls progress reporting.
One of \code{"auto"}, \code{"on"}, or \code{"off"}.
\itemize{
\item \code{"auto"}: Emit \code{progressr} signals but do not force display; a progress
bar appears only if the caller has enabled a handler (e.g.,
\code{progressr::with_progress()} or a global handler).
\item \code{"on"}: Wraps the call in \code{progressr::with_progress()} so progress will
render using any available handler.
\item \code{"off"}: Suppresses progress signals via \code{progressr::without_progress()}.
}}

\item{...}{
  Arguments passed on to \code{\link[=aw_transcribe]{aw_transcribe}}
  \describe{
    \item{\code{model}}{A required model object produced by \code{\link{whisper}}.}
    \item{\code{language}}{The language of the audio. Defaults to 'auto'. For a list of
all languages the model can handle: see
\code{\link[audio.whisper]{whisper_languages}}.}
    \item{\code{audio_args}}{A list of optional arguments to forward to
\code{\link{aw_prep_audio}}.}
    \item{\code{whisper_args}}{A list of optional arguments to forward to
\code{\link[audio.whisper]{predict.whisper}}.}
  }}
}
\value{
(Invisibly) the character vector of input files processed.
}
\description{
Find all files in a specified directory with a specified extension and then
apply \code{\link{aw_transcribe}} to each to transcribe them. If the input files are
not in the format expected by Whisper, they will be converted first.
}
\details{
Can optionally output a progress bar by using
\code{\link[progressr]{handlers}}, e.g., by calling
\verb{handlers("cli"); handlers(global = TRUE)} before this code.

Cannot be run in parallel due to using the GPU.
}
