% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_openface.R
\name{of_extract_dir}
\alias{of_extract_dir}
\title{Run of_extract() on multiple files in a directory}
\usage{
of_extract_dir(indir, inext, outdir, recursive = FALSE, ...)
}
\arguments{
\item{indir}{(character) What directory are the input files in?}

\item{inext}{(character) What file extension should be looked for in \code{indir}
(e.g., "mp4" or "avi")?}

\item{outdir}{(character) What directory should the output files be created
in?}

\item{recursive}{(logical, default=FALSE) Should files in subdirectories
within \code{indir} be included?}

\item{...}{
  Arguments passed on to \code{\link[=of_extract]{of_extract}}
  \describe{
    \item{\code{fp2D}}{(logical, default=TRUE) Should the output include 2D facial landmark points (in pixels)?}
    \item{\code{fp3D}}{(logical, default=TRUE) Should the output include 3D facial landmark points (in millimeters)?}
    \item{\code{pdm}}{(logical, default=FALSE) Should the output include the parameter estimates of the point distribution model?}
    \item{\code{pose}}{(logical, default=TRUE) Should the output include head pose estimates?}
    \item{\code{gaze}}{(logical, default=TRUE) Should the output include eye gaze estimates?}
    \item{\code{aus}}{(logical, default=TRUE) Should the output include action unit estimates?}
    \item{\code{wild}}{(logical, default=FALSE) Should the model consider extended search regions (for challenging images)?}
    \item{\code{multiview}}{(logical, default=FALSE) Should multi-view initialisation be used (more robust but slower)?}
  }}
}
\value{
\code{NULL}
}
\description{
Find all video files with a specified extension in a specified directory and
then extract openface features from each.
}
\details{
Can be optionally run in parallel by running \code{\link[future]{plan}()}
beforehand, e.g., by calling \code{plan("multisession", workers = 4)}.

Can optionally output a progress bar by using
\code{\link[progressr]{handlers}()} beforehand, e.g., by calling
\verb{handlers("cli"); handlers(global = TRUE)}.
}
