% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_opensmile.R
\name{os_extract_dir}
\alias{os_extract_dir}
\title{Run os_extract() on multiple files in a directory}
\usage{
os_extract_dir(
  indir,
  inext,
  wavdir = NULL,
  aggdir = NULL,
  llddir = NULL,
  recursive = FALSE,
  ...
)
}
\arguments{
\item{indir}{(character) What directory contains the input .wav files?}

\item{inext}{(character) What file extension to look for in \code{indir}?}

\item{wavdir}{(character, default=NULL) What directory should the prepared
WAV audio files be saved to? If \code{NULL}, temporary WAV files will be created
and then discarded (if needed).}

\item{aggdir}{(character, default=NULL) What directory should the AGG output
files be saved to? If \code{NULL}, AGG files will not be output. Note that
\code{aggdir} or \code{llddir} (or both) must be non-NULL.}

\item{llddir}{(character, default=NULL) What directory should the LLD output
files be saved to? If \code{NULL}, LLD files will not be output. Note that
\code{aggdir} or \code{llddir} (or both) must be non-NULL.}

\item{recursive}{(logical, default=FALSE) Should files in subdirectories
within \code{indir} be included?}

\item{...}{
  Arguments passed on to \code{\link[=os_extract]{os_extract}}
  \describe{
    \item{\code{config}}{(character, default="misc/emo_large") Which configuration file
should be used to analyze \code{infile}? A list of available config files can be
generated using \code{os_list_configs()}.}
    \item{\code{stream}}{(numeric, default=0) The index of the audio stream to extract
(ffmpeg uses zero-indexing so 0 is the first stream).}
  }}
}
\value{
\code{NULL}
}
\description{
Find all .wav files in a specified directory and then extract opensmile
features from each (according to \code{config}).
}
\details{
Can be optionally run in parallel by running \code{\link[future]{plan}()}
beforehand, e.g., by calling \code{plan("multisession", workers = 4)}.

Can optionally output a progress bar by using
\code{\link[progressr]{handlers}()} beforehand, e.g., by calling
\verb{handlers("cli"); handlers(global = TRUE)}.
}
